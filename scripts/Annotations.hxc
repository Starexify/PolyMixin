import funkin.modding.events.ScriptEvent;
import funkin.modding.module.ScriptedModule;

class Annotations extends ScriptedModule {
    override public function onStateChangeBegin(event:StateChangeScriptEvent) {
        //test();
        //testTwo();
        //testThree();
        //testFour();
        //testFive();
        //newTest();
    }

    public function test() {
        trace("test() called");
    }

/*    public function testTwo() {
        if (false) {
            return trace("Test Return false");
        } else {
            if (true) {
                return trace("Test Return true");
            }
        }
        if (true) {
            return trace("Test Return false");
        }
        return trace("Test Return");
    }*/
    public function testTwo() {
        trace("test() called");
        doSmth();
        doSmth();
        doSmth();
        trace("test() called x2");
    }

    function doSmth() {
        trace("doSmth() called");
    }

    public function testThree() {
        return 20;
    }

    public function testFour() {
        if (true) trace(true);
        if (false) trace(false);
        if (true) trace("true x2");
        if (true) trace("true x3");
    }

    public function testFive() {
        Annotations.setX(1);
        Annotations.setX(2);
    }

    public static function setX(newX:Int) {
        trace("X value for Annotations set to: " + newX);
    }
}