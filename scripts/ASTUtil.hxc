import funkin.modding.module.ModuleHandler;
import funkin.util.ReflectUtil;
import hscript.Expr;
import polymod.hscript._internal.PolymodScriptClass;

class ASTUtil {
    public static function getFuncCache(instance:Dynamic):Map<String, FunctionDecl> {
        return ReflectUtil.getField(instance, "_cachedFunctionDecls");
    }

    public static function getFields(instance:Dynamic):FieldCache {
        return {
            fields: ReflectUtil.getField(instance, "_c").fields,
            cached: ReflectUtil.getField(instance, "_cachedFieldDecls")
        };
    }

    public static function getScriptedClass(name:String):PolymodScriptClass {
        return ModuleHandler.getModule(name)._asc;
    }
}

typedef FieldCache = {
    var fields:Array<FieldDecl>;
    var cached:Map<String, FieldDecl>;
}